version: '3.8'

services:
  mongo:
    image: mongo
    restart: always
    container_name: hse_task_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    volumes:
      - ./project_data/mongo_init.js:/docker-entrypoint-initdb.d/mongo_init.js
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s

  mongo-express:
    image: mongo-express
    restart: always
    container_name: hse_task_mongo_ui
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${ME_CONFIG_MONGODB_ADMINUSERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${ME_CONFIG_MONGODB_ADMINPASSWORD}"
      ME_CONFIG_MONGODB_URL: "${ME_CONFIG_MONGODB_URL}"
    env_file:
      - .env
    depends_on:
      - mongo

  postgresql:
    image: postgres:17.4-bookworm
    restart: always
    container_name: hse_task_postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ./project_data/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: hse_task_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "6060:80"
    env_file:
      - .env
    depends_on:
      - postgresql

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    container_name: hse_task_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    container_name: hse_task_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  clickhouse-server:
    image: clickhouse/clickhouse-server:latest
    restart: always
    container_name: hse_task_clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./project_data/clickhouse_data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: "default"
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "1"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  airflow_webserver:
    build: project_data/airflow
    restart: always
    container_name: hse_task_airflow_webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: "${AIRFLOW__CORE__EXECUTOR}"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}"
    volumes:
      - ./project_data/airflow/dags:/opt/airflow/dags
      - ./project_data/airflow/logs:/opt/airflow/logs
      - ./project_data/airflow/plugins:/opt/airflow/plugins
      - ./jars/postgresql-42.7.5.jar:/opt/jars/postgresql-42.7.5.jar
      - ./jars/mongo-spark-connector_2.13-10.1.1.jar:/opt/jars/mongo-spark-connector_2.13-10.1.1.jar
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - postgresql
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --password admin --firstname Air --lastname Flow --role Admin --email admin@example.com &&
               airflow webserver"

  airflow_scheduler:
    build: project_data/airflow
    restart: always
    container_name: hse_task_airflow_scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: "${AIRFLOW__CORE__EXECUTOR}"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}"
    volumes:
      - ./project_data/airflow/dags:/opt/airflow/dags
      - ./project_data/airflow/logs:/opt/airflow/logs
      - ./project_data/airflow/plugins:/opt/airflow/plugins
      - ./jars/postgresql-42.7.5.jar:/opt/jars/postgresql-42.7.5.jar
      - ./jars/mongo-spark-connector_2.13-10.1.1.jar:/opt/jars/mongo-spark-connector_2.13-10.1.1.jar
    depends_on:
      - postgresql
    command: >
      bash -c "airflow db init && airflow scheduler"